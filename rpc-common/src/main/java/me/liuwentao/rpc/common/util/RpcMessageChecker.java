package me.liuwentao.rpc.common.util;import me.liuwentao.rpc.common.Entity.RpcRequest;import me.liuwentao.rpc.common.Entity.RpcResponse;import me.liuwentao.rpc.common.Enumeration.ResponseCode;import me.liuwentao.rpc.common.Enumeration.RpcError;import me.liuwentao.rpc.common.Exception.RpcException;import org.slf4j.Logger;import org.slf4j.LoggerFactory;/** * Created by liuwentao on 2021/7/1 16:10 */public class RpcMessageChecker {    // 检查rpcResponse是否为null;检查rpcResponse中的requestId和rpcRequest中的requestId是否一样；检查rpcResponse中status是否是成功状态码    private static final Logger logger = LoggerFactory.getLogger(RpcMessageChecker.class);    private static final String INTERFACE_NAME = "interfaceName";    private RpcMessageChecker(){    }    public static void check(RpcRequest rpcRequest, RpcResponse<?> rpcResponse) {        if (rpcResponse == null) {            logger.error("服务调用失败，serviceName:{}", rpcRequest.getInterfaceName());            throw new RpcException(RpcError.SERVICE_INVOCATION_FAILURE,                    INTERFACE_NAME + ":" + rpcRequest.getInterfaceName());        }        if (!rpcRequest.getRequestId().equals(rpcResponse.getRequestId())) {            logger.error("响应rpcResponse不匹配");            throw new RpcException(RpcError.RESPONSE_NOT_MATCH, INTERFACE_NAME + ":" + rpcRequest.getInterfaceName());        }        if (rpcResponse.getStatusCode() == null || !rpcResponse.getStatusCode().equals(ResponseCode.SUCCESS.getCode())) {            logger.error("调用服务失败，interfaceName:{}, rpcResponse:{}", rpcRequest.getInterfaceName(), rpcResponse);            throw new RpcException(RpcError.SERVICE_INVOCATION_FAILURE,                    INTERFACE_NAME + ":" + rpcRequest.getInterfaceName());        }    }}